{"version":3,"sources":["logging/Logging.js","logging/LogErrMsg.js","game/GameMenu.js","utils/ProgressBar.js","game/GameHeader.js","utils/statsNamesPL.js","utils/statsNamesEN.js","utils/blankEquipment.js","utils/getStatsAllEquipments.js","game/Hero/AddStatsButton.js","game/Hero/EquipmentCard.js","game/Hero/BackpackCard.js","game/Hero/AvatarCard.js","game/Hero/Hero.js","utils/displayTime.js","game/City/TaskCard.js","game/City/SelectTaskContainer.js","game/City/ExecuteTaskContainer.js","game/City/FinishedTaskContainer.js","game/City/City.js","game/Residence/Residence.js","game/Warehouse/Warehouse.js","game/Lab/Lab.js","game/Bribes/BribeCard.js","game/Bribes/Bribes.js","game/Map/Map.js","game/Socios/Socios.js","game/Cartel/Cartel.js","game/MailBox/MailBox.js","game/Shop/Shop.js","game/Prison/Prison.js","utils/getRandomInt.js","utils/getRandomFloat.js","utils/getEquipmentPrice.js","utils/getNewItem.js","game/Game.js","App.js","serviceWorker.js","index.js"],"names":["Logging","props","value","login","onChange","event","handleChangeLogin","target","password","handleChangePassword","onClick","handleLoggingOnClickButton","LogErrMsg","logErrMsg","GameMenu","className","CityAlert","onClickLogout","ProgressBar","max","GameHeader","useState","isPopUp","setIsPopUp","hero","username","category","gold","lvl","id","onMouseEnter","onMouseLeave","exp","expNextLvl","statsNamesPL","statsNamesEN","blankEquipment","name","description","imgUrl","stats","strength","dexterity","stamina","intelligence","luck","armor","getStatsAllEquipments","equipments","equipmentStats","newStatsAllEquipments","shooting","flair","agility","statName","AddStatsButton","disabled","isDisabled","cost","EquipmentCard","isPopUpStats","setIsPopUpStats","url","equipment","src","alt","map","index","key","price","undressEquipment","sellEquipment","BackpackCard","dressEquipment","AvatarCard","avatar","Hero","claculatePointCost","isEnoughGoldToBuyStatsPoint","addStatsPoint","newHero","updateHero","deleteElementId","array","newArray","forEach","item","i","push","what","newEquipent","backpack","newBackpack","statsAllEquipments","length","console","log","Number","isInteger","getEquipmentCard","bind","getBackpackCard","head","body","legs","foots","palms","finger","neck","amulet","ammo","bullet","slice","displayTime","time","m","Math","floor","s","round","TaskCard","task","taskDuration","prisonChance","startTask","SelectTaskContainer","ExecuteTaskContainer","remainingTaskDuration","taskElapsedTime","FinishedTaskContainer","calculateTask","City","isStarted","isFinished","Residence","Warehouse","Lab","BribeCard","remainingBribeDuration","bribeDuration","bribeElapsedTime","bribeCost","chanceReduction","heroBribe","isPayed","isEnoughGoldToPayBribe","payBribe","Bribes","bribesList","duration","bribeId","prison","chance","bribe","date","Date","endTime","getTime","Map","Socios","Cartel","MailBox","Shop","Prison","remainingPrisonDuration","prisonDuration","prisonElapsedTime","isEnoughGoldToLeftPrison","payAndGetOutPrison","costOfGettingOutOfPrison","getRandomInt","min","ceil","random","getRandomFloat","decimalPlaces","rand","power","pow","getEquipmentPrice","sum","getNewItem","itemsList","heroLvl","newItem","Game","actualGamePageName","setActualGamePageName","setHero","tasksList","setTasksList","setBribesList","setItemsList","lvlsList","setLvlsList","isHeroDataLoaded","setHeroDataLoaded","isNextLvlPopUp","setNextLvlPopUp","awsUrl","useEffect","heroId","axios","get","then","data","catch","err","getHero","tasks","bribes","items","lvls","React","useCallback","isLvlUp","put","setRemainingTaskDuration","setCityAlert","isTaskTimeElapsed","currentTime","secondsToEnd","finishTask","interval","setInterval","isPrisonTimeElapsed","terminationOfPrisonSentence","isBribeTimeElapsed","finishBribe","clearInterval","taskEndTime","isCalculated","isPrisoned","exitPrisonTime","addEquipmentToBackpack","drawedTaskIds","drawOfThreeTaskIds","newGold","newExp","newName","newDescription","newImgUrl","newTaskDuration","id1","id2","id3","setRemainingPrisonDuration","calculateCostOfGettingOutOfPrison","setRemainingBribeDuration","App","isUserLogged","setUserLogged","setLogin","setPassword","setLogErrMsg","setHeroId","user","_id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a835275b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Logging = (props) => {\r\n  return (\r\n    <div>\r\n      <input value={props.login} onChange={event => props.handleChangeLogin(event.target.value)}/>\r\n      <input value={props.password} onChange={event => props.handleChangePassword(event.target.value)}/>\r\n      <button onClick={() => props.handleLoggingOnClickButton()}>LOGIN</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logging;\r\n","import React from 'react';\r\n\r\nconst LogErrMsg = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      {props.logErrMsg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogErrMsg;\r\n","import React from 'react';\r\nimport './GameMenu.css';\r\n\r\nconst GameMenu = (props) => {\r\n\r\n  return (\r\n    <div className=\"menuContainer\">\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Hero\")}>Bohater</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"City\")}>Miasto {props.CityAlert}</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Residence\")}>Willa</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Warehouse\")}>Magazyn</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Lab\")}>Laboratorium</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Bribes\")}>Łapówki</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Map\")}>Mapa</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Socios\")}>Socios</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Cartel\")}>Kartel</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"MailBox\")}>MailBox</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClick(\"Shop\")}>Sklep</button></div>\r\n      <div className=\"menuButtonContainer\"><button onClick={() => props.onClickLogout()}>LogOut</button></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameMenu;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ProgressBar.css'\r\n\r\nconst ProgressBar = (props) => {\r\n\r\n\r\n  return (\r\n    <progress value={props.value} max={props.max}></progress>\r\n  )\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, {useState} from 'react';\r\nimport './GameHeader.css';\r\nimport ProgressBar from './../utils/ProgressBar';\r\n\r\nconst GameHeader = (props) => {\r\n  const [isPopUp, setIsPopUp] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"headerContainer\">\r\n        <div className=\"headerItem\">\r\n          Nick: {props.hero.username}\r\n        </div>\r\n        <div className=\"headerItem\">\r\n          Klasa: {props.hero.category}\r\n        </div>\r\n        <div className=\"headerItem\">\r\n          Złoto: {props.hero.gold}\r\n        </div>\r\n        <div className=\"headerItem\">\r\n          Lvl: {props.hero.lvl}\r\n        </div>\r\n      </div>\r\n      <div  id=\"progressBarHeader\"\r\n            onMouseEnter={()=>setIsPopUp(true)}\r\n            onMouseLeave={()=>setIsPopUp(false)}>\r\n        <ProgressBar value={props.hero.exp} max={props.hero.expNextLvl}/>\r\n        {isPopUp && (\r\n          <div id=\"progressBarHeaderInfo\">\r\n            {props.hero.exp} / {props.hero.expNextLvl}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameHeader;\r\n","const statsNamesPL = [\"strzelanie\",\r\n                      \"wytrzymałość\",\r\n                      \"inteligencja\",\r\n                      \"spryt\",\r\n                      \"zwinność\",\r\n                      \"szczęście\",\r\n                      \"pancerz\"];\r\n\r\nexport default statsNamesPL\r\n","const statsNamesEN = [\"shooting\",\r\n                      \"stamina\",\r\n                      \"intelligence\",\r\n                      \"flair\",\r\n                      \"agility\",\r\n                      \"luck\",\r\n                      \"armor\"];\r\n\r\nexport default statsNamesEN\r\n","const blankEquipment = {\r\n  name: '',\r\n  description: '',\r\n  imgUrl: 'blank.png',\r\n  stats: {\r\n    strength: 0,\r\n    dexterity: 0,\r\n    stamina: 0,\r\n    intelligence: 0,\r\n    luck: 0,\r\n    armor: 0\r\n  }\r\n}\r\n\r\nexport default blankEquipment\r\n","import statsNamesEN from './statsNamesEN.js';\r\n\r\nconst getStatsAllEquipments = (equipments) => {\r\n  const equipmentNames = [\"head\", \"body\", \"legs\", \"foots\", \"ammo\", \"bullet\", \"palms\", \"finger\", \"neck\", \"amulet\"];\r\n  let equipmentStats = {}\r\n  const newStatsAllEquipments = {\r\n    shooting: 0,\r\n    stamina: 0,\r\n    intelligence: 0,\r\n    flair: 0,\r\n    agility: 0,\r\n    luck: 0,\r\n    armor: 0\r\n  }\r\n\r\n  for(var name of equipmentNames) {\r\n    if(equipments[name]){\r\n      equipmentStats = equipments[name].stats;\r\n      for(var statName of statsNamesEN) {\r\n        newStatsAllEquipments[statName] += equipmentStats[statName]\r\n      }\r\n    }\r\n  }\r\n\r\n  return newStatsAllEquipments;\r\n}\r\n\r\nexport default getStatsAllEquipments\r\n","import React from 'react';\r\n\r\nconst AddStatsButton = (props) => {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.onClick(props.statName)} disabled={props.isDisabled ? true : false}>+</button>\r\n      Koszt: {props.cost}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddStatsButton;\r\n","import React, {useState} from 'react';\r\nimport './EquipmentCard.css';\r\nimport statsNamesPL from './../../utils/statsNamesPL.js';\r\nimport statsNamesEN from './../../utils/statsNamesEN.js';\r\n\r\nconst EquipmentCard = (props) => {\r\n  const [isPopUpStats, setIsPopUpStats] = useState(false);\r\n  const url = 'https://rololand.github.io/cartelgame/db/items/' + props.equipment.imgUrl;\r\n\r\n  return (\r\n    <div  className=\"equipmentCard\"\r\n          onMouseEnter={()=>setIsPopUpStats(true)}\r\n          onMouseLeave={()=>setIsPopUpStats(false)}>\r\n      <div>\r\n        <img src={url} alt={''}/>\r\n      </div>\r\n      {isPopUpStats && (props.equipment.name !== '') && (\r\n        <div className=\"equipmentInfo\">\r\n          <span className=\"equipmentTitle\">{props.equipment.name}</span>\r\n          <span className=\"equipmentDescription\">{props.equipment.description}</span>\r\n          {statsNamesEN.map((statName, index)=>\r\n            <div key={statName} className=\"statsName\">\r\n              {props.equipment.stats[statName] > 0 && (\r\n                <span>\r\n                  {statsNamesPL[index]}: {props.equipment.stats[statName]}\r\n                </span>\r\n              )}\r\n            </div>\r\n          )}\r\n          Wartość: {props.equipment.price}\r\n          <div>\r\n            <button onClick={() => props.undressEquipment(props.equipment)}>zdejmij</button>\r\n            <button onClick={() => props.sellEquipment(props.equipment)}>sprzedaj</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EquipmentCard;\r\n","import React, {useState} from 'react';\r\nimport './EquipmentCard.css';\r\nimport statsNamesPL from './../../utils/statsNamesPL.js';\r\nimport statsNamesEN from './../../utils/statsNamesEN.js';\r\n\r\nconst BackpackCard = (props) => {\r\n  const [isPopUpStats, setIsPopUpStats] = useState(false);\r\n  const url = 'https://rololand.github.io/cartelgame/db/items/' + props.equipment.imgUrl;\r\n\r\n  return (\r\n    <div  className=\"equipmentCard\"\r\n          onMouseEnter={()=>setIsPopUpStats(true)}\r\n          onMouseLeave={()=>setIsPopUpStats(false)}>\r\n      <div>\r\n        <img src={url} alt={''}/>\r\n      </div>\r\n      {isPopUpStats && (props.equipment.name !== '') && (\r\n        <div className=\"equipmentInfo\">\r\n          <span className=\"equipmentTitle\">{props.equipment.name}</span>\r\n          <span className=\"equipmentDescription\">{props.equipment.description}</span>\r\n          {statsNamesEN.map((statName, index)=>\r\n            <div key={statName} className=\"statsName\">\r\n              {props.equipment.stats[statName] > 0 && (\r\n                <span>\r\n                  {statsNamesPL[index]}: {props.equipment.stats[statName]}\r\n                </span>\r\n              )}\r\n            </div>\r\n          )}\r\n          Wartość: {props.equipment.price}\r\n          <div>\r\n            <button onClick={() => props.dressEquipment(props.equipment, props.id)}>zaloz</button>\r\n            <button onClick={() => props.sellEquipment(props.equipment, props.id)}>sprzedaj</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackpackCard;\r\n","import React from 'react';\r\n\r\nconst AvatarCard = (props) => {\r\n  const url = 'https://rololand.github.io/cartelgame/db/avatars/' + props.avatar;\r\n  return (\r\n    <div>\r\n      <img src={url} alt={''}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AvatarCard;\r\n","import React from 'react';\r\nimport './Hero.css';\r\n\r\nimport statsNamesPL from './../../utils/statsNamesPL.js';\r\nimport statsNamesEN from './../../utils/statsNamesEN.js';\r\nimport blankEquipment from './../../utils/blankEquipment.js';\r\nimport getStatsAllEquipments from './../../utils/getStatsAllEquipments.js';\r\n\r\nimport AddStatsButton from './AddStatsButton.js';\r\nimport EquipmentCard from './EquipmentCard.js';\r\nimport BackpackCard from './BackpackCard.js';\r\nimport AvatarCard from './AvatarCard.js';\r\n\r\nconst Hero = (props) => {\r\n\r\n  const claculatePointCost = (statName) => {\r\n    const statValue = props.hero.stats[statName];\r\n    const pointCost = (statValue + 1) * 10;\r\n\r\n    return pointCost\r\n  }\r\n\r\n  const isEnoughGoldToBuyStatsPoint = (statName) => {\r\n    const heroGold = props.hero.gold;\r\n    const pointCost = claculatePointCost(statName);\r\n\r\n    return heroGold > pointCost\r\n  }\r\n\r\n  const addStatsPoint = (statName) => {\r\n    const newHero = props.hero;\r\n\r\n    if(isEnoughGoldToBuyStatsPoint(statName)) {\r\n      newHero.gold = newHero.gold - claculatePointCost(statName);\r\n      newHero.stats[statName] = newHero.stats[statName] + 1;\r\n      props.updateHero(newHero);\r\n    }\r\n  }\r\n\r\n  const deleteElementId = (array, id) => {\r\n    let newArray = []\r\n    array.forEach((item, i) => {\r\n      if(i !== id) {\r\n        newArray.push(item)\r\n      }\r\n    });\r\n    return newArray;\r\n  }\r\n\r\n  const dressEquipment = (equipment, id) => {\r\n    const newHero = props.hero;\r\n    const what = equipment.what;\r\n    if(newHero.equipment[what]) {\r\n      const newEquipent = newHero.backpack[id];\r\n      const newBackpack = newHero.equipment[what];\r\n      newHero.backpack[id] = newBackpack;\r\n      newHero.equipment[what] = newEquipent;\r\n    } else {\r\n      newHero.equipment[what] = equipment;\r\n      newHero.backpack = deleteElementId(props.hero.backpack, id);\r\n    }\r\n    newHero.statsAllEquipments = getStatsAllEquipments(newHero.equipment);\r\n    props.updateHero(newHero);\r\n  }\r\n\r\n  const undressEquipment = (equipment) => {\r\n    const newHero = props.hero;\r\n    delete newHero.equipment[equipment.what];\r\n    if(props.hero.backpack.length < 10) {\r\n      props.hero.backpack.push(equipment);\r\n    }\r\n    console.log(newHero);\r\n    newHero.statsAllEquipments = getStatsAllEquipments(newHero.equipment)\r\n    props.updateHero(newHero);\r\n  }\r\n\r\n  const sellEquipment = (equipment, id) => {\r\n    const newHero = props.hero;\r\n    newHero.gold += equipment.price;\r\n    if(Number.isInteger(id)) {\r\n      newHero.backpack = deleteElementId(props.hero.backpack, id);\r\n    } else {\r\n      delete newHero.equipment[equipment.what];\r\n    }\r\n    newHero.statsAllEquipments = getStatsAllEquipments(newHero.equipment)\r\n    props.updateHero(newHero);\r\n  }\r\n\r\n  const getEquipmentCard = (equipment) => {\r\n    if(equipment) {\r\n      return (\r\n        <EquipmentCard equipment={equipment}\r\n          undressEquipment = {undressEquipment.bind(this)}\r\n          sellEquipment = {sellEquipment.bind(this)}/>\r\n      )\r\n    } else {\r\n      return (\r\n        <EquipmentCard equipment={blankEquipment}\r\n          undressEquipment = {undressEquipment.bind(this)}\r\n          sellEquipment = {sellEquipment.bind(this)}/>\r\n      )\r\n    }\r\n  }\r\n\r\n  const getBackpackCard = (equipment, i) => {\r\n    if(equipment) {\r\n      return (\r\n        <BackpackCard key={i} id={i} equipment={equipment}\r\n          dressEquipment={dressEquipment.bind(this)}\r\n          sellEquipment={sellEquipment.bind(this)}/>\r\n      )\r\n    } else {\r\n      return (\r\n        <BackpackCard key={i} id={i} equipment={blankEquipment}\r\n          dressEquipment={dressEquipment.bind(this)}\r\n          sellEquipment={sellEquipment.bind(this)}/>\r\n      )\r\n    }\r\n  }\r\n\r\n  const i = [0, 1, 2, 3, 4];\r\n\r\n  return (\r\n    <div id=\"Hero\">\r\n      <div className=\"row\">\r\n        <div>\r\n          <div className=\"row\">\r\n            <div>\r\n              {getEquipmentCard(props.hero.equipment.head)}\r\n              {getEquipmentCard(props.hero.equipment.body)}\r\n              {getEquipmentCard(props.hero.equipment.legs)}\r\n              {getEquipmentCard(props.hero.equipment.foots)}\r\n            </div>\r\n            <div>\r\n              <AvatarCard avatar={props.hero.avatar} />\r\n            </div>\r\n            <div>\r\n              {getEquipmentCard(props.hero.equipment.palms)}\r\n              {getEquipmentCard(props.hero.equipment.finger)}\r\n              {getEquipmentCard(props.hero.equipment.neck)}\r\n              {getEquipmentCard(props.hero.equipment.amulet)}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"row\">\r\n              {getEquipmentCard(props.hero.equipment.ammo)}\r\n              {getEquipmentCard(props.hero.equipment.bullet)}\r\n            </div>\r\n            <div className=\"row\">\r\n              flakony\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"backpack row\">\r\n          <div>\r\n          {i.map(i =>\r\n            getBackpackCard(props.hero.backpack[i], i)\r\n          )}\r\n          </div>\r\n          <div>\r\n          {i.map(i =>\r\n            getBackpackCard(props.hero.backpack[i+5], i+5)\r\n          )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"statsContainer\">\r\n        <div className=\"row\">\r\n          <div>\r\n            {statsNamesEN.slice(0,3).map((statName, index)=>\r\n              statName !== \"armor\" && (\r\n                <div key={statsNamesPL[index]} className=\"row\">\r\n                  <div className=\"statsName\">\r\n                    {statsNamesPL[index]}: {props.hero.stats[statName]} + {props.hero.statsAllEquipments[statName]}\r\n                  </div>\r\n                  <AddStatsButton onClick={(statName) => addStatsPoint(statName)}\r\n                                  statName={statName}\r\n                                  cost={claculatePointCost(statName)}\r\n                                  isDisabled={!isEnoughGoldToBuyStatsPoint(statName)}/><br />\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n          <div>\r\n            {statsNamesEN.slice(3,statsNamesEN.length).map((statName, index)=>\r\n              statName !== \"armor\" && (\r\n                <div key={statsNamesPL[index+3]} className=\"row\">\r\n                  <div className=\"statsName\">\r\n                    {statsNamesPL[index+3]}: {props.hero.stats[statName]} + {props.hero.statsAllEquipments[statName]}\r\n                  </div>\r\n                  <AddStatsButton onClick={(statName) => addStatsPoint(statName)}\r\n                                  statName={statName}\r\n                                  cost={claculatePointCost(statName)}\r\n                                  isDisabled={!isEnoughGoldToBuyStatsPoint(statName)}/><br />\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Hero;\r\n","var displayTime = (time) => {\r\n  let m = Math.floor(time/60);\r\n  let s = Math.round(time%60);\r\n  let min = '';\r\n  let sek = '';\r\n  m < 0 && (m = 0);\r\n  s < 0 && (s = 0);\r\n  m < 10 ? min = '0'+m : min = m;\r\n  s < 10 ? sek = '0'+s : sek = s;\r\n  return (min + \":\" + sek);\r\n}\r\n\r\nexport default displayTime\r\n","import React from 'react';\r\nimport './TaskCard.css';\r\nimport displayTime from './../../utils/displayTime.js';\r\n\r\nconst TaskCard = (props) => {\r\n  let id = props.id;\r\n  const url = 'https://rololand.github.io/cartelgame/db/tasks/' + props.task.imgUrl[id];\r\n  return (\r\n    <div className=\"card\">\r\n      <img className=\"cardImg\" src={url} alt={''}/><br />\r\n      <h1>{props.task.name[id]}</h1>\r\n      <p className=\"cardDescription\">{props.task.description[id]}</p>\r\n      gold: {props.task.gold[id]}<br />\r\n      exp: {props.task.exp[id]}<br />\r\n      time: {displayTime(props.task.taskDuration[id])}<br />\r\n      Szansa na złapanie: {props.prisonChance < 0 ? 0 : props.prisonChance }%<br />\r\n      <button onClick={() => props.startTask(props.task, id)}>Start Task</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard;\r\n","import React from 'react';\r\nimport TaskCard from './TaskCard.js';\r\nimport './SelectTaskContainer.css';\r\n\r\nconst SelectTaskContainer = (props) => {\r\n  return (\r\n    <div className=\"SelectTaskContainer row\">\r\n      {[0, 1, 2].map((id) =>\r\n        <TaskCard startTask={props.startTask.bind(this)}\r\n                  task={props.task}\r\n                  prisonChance={props.prisonChance}\r\n                  id={id}\r\n                  key={id}/>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectTaskContainer;\r\n","import React from 'react';\r\nimport displayTime from './../../utils/displayTime';\r\nimport ProgressBar from './../../utils/ProgressBar';\r\n\r\nconst ExecuteTaskContainer = (props) => {\r\n  const url = 'https://rololand.github.io/cartelgame/db/tasks/' + props.task.imgUrl;\r\n  let remainingTaskDuration = props.remainingTaskDuration\r\n  remainingTaskDuration = Number.isInteger(remainingTaskDuration) ?\r\n                                  remainingTaskDuration :\r\n                                  props.task.taskDuration\r\n  const taskElapsedTime = props.task.taskDuration - remainingTaskDuration\r\n  return (\r\n    <div>\r\n      <h1>{props.task.name}</h1>\r\n      <img className=\"cardImg\" src={url} alt={''}/><br />\r\n      {displayTime(remainingTaskDuration)} <br />\r\n      <ProgressBar value={taskElapsedTime}\r\n                max={props.task.taskDuration} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExecuteTaskContainer;\r\n","import React from 'react';\r\nimport './FinishedTaskContainer.css';\r\n\r\nconst FinishedTaskContainer = (props) => {\r\n  const url = 'https://rololand.github.io/cartelgame/db/tasks/' + props.task.imgUrl;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Ukończono zadanie!</h1>\r\n      <h2>{props.task.name}</h2>\r\n      <img className=\"taskFinishedImg\" src={url} alt={''}/><br />\r\n      <div>\r\n        Złoto: {props.task.gold} <br />\r\n        Exp: {props.task.exp} <br />\r\n        Item name: {props.task.item ? props.task.item.name : ''}<br />\r\n        Item description: {props.task.item ? props.task.item.description : ''}<br />\r\n        Szansa na złapanie: {props.prisonChance < 0 ? 0 : props.prisonChance }%<br />\r\n        <button onClick={() => props.calculateTask()}>Calculate Task</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedTaskContainer;\r\n","import React from 'react';\r\nimport SelectTaskContainer from './SelectTaskContainer.js'\r\nimport ExecuteTaskContainer from './ExecuteTaskContainer.js'\r\nimport FinishedTaskContainer from './FinishedTaskContainer.js'\r\n\r\nconst City = (props) => {\r\n\r\n  const pageSelector = () => {\r\n    if(props.task.isStarted) {\r\n      if(props.task.isFinished)\r\n        return <FinishedTaskContainer   task={props.task}\r\n                                        prisonChance={props.prisonChance}\r\n                                        calculateTask={props.calculateTask}/>\r\n      else\r\n        return <ExecuteTaskContainer  remainingTaskDuration={props.remainingTaskDuration}\r\n                                      task={props.task}/>\r\n    } else {\r\n      return <SelectTaskContainer   startTask={props.startTask.bind(this)}\r\n                                    task={props.task}\r\n                                    prisonChance={props.prisonChance}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {pageSelector()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default City;\r\n","import React from 'react';\r\n\r\nconst Residence = () => {\r\n\r\n  return (\r\n    <div>\r\n      Residence\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Residence;\r\n","import React from 'react';\r\n\r\nconst Warehouse = () => {\r\n\r\n  return (\r\n    <div>\r\n      Warehouse\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Warehouse;\r\n","import React from 'react';\r\n\r\nconst Lab = () => {\r\n\r\n  return (\r\n    <div>\r\n      Lab\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Lab;\r\n","import React from 'react';\r\nimport './BribeCard.css';\r\nimport displayTime from './../../utils/displayTime';\r\nimport ProgressBar from './../../utils/ProgressBar';\r\n\r\nconst BribeCard = (props) => {\r\n  const imgUrl = 'https://rololand.github.io/cartelgame/db/avatars/' + props.imgUrl\r\n  let remainingBribeDuration = props.remainingBribeDuration\r\n  remainingBribeDuration = Number.isInteger(remainingBribeDuration) ?\r\n                                  remainingBribeDuration :\r\n                                  props.bribeDuration\r\n  const bribeElapsedTime = props.bribeDuration - remainingBribeDuration\r\n  return (\r\n    <div className = \"card\">\r\n      <img className = \"cardImg\" src={imgUrl} alt={''}/>\r\n      <h1 className = \"bribeHeader\">{props.name}</h1>\r\n      <p className = \"bribeDescription\">{props.description}</p>\r\n      Koszt: {props.bribeCost}<br />\r\n      Czas trwania: {displayTime(props.bribeDuration)}<br />\r\n      Redukuje szansę złapania do więzienia o: {props.chanceReduction}%<br />\r\n      {props.heroBribe.isPayed && props.heroBribe.id === props.id ?\r\n        <div>\r\n          {displayTime(remainingBribeDuration)} <br />\r\n          <ProgressBar value={bribeElapsedTime}\r\n                    max={props.bribeDuration} />\r\n        </div> :\r\n        <button disabled={props.isEnoughGoldToPayBribe && !props.heroBribe.isPayed? false : true}\r\n                onClick={() => props.payBribe(props.id)}>\r\n          Zapłać łapówkę!\r\n        </button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BribeCard;\r\n","import React from 'react';\r\nimport BribeCard from './BribeCard.js'\r\n\r\nconst Bribes = (props) => {\r\n  const isEnoughGoldToPayBribe = (bribeCost) => {\r\n    return props.hero.gold > bribeCost\r\n  }\r\n\r\n  const payBribe = (bribeId) => {\r\n    const newHero = props.hero\r\n    if (isEnoughGoldToPayBribe(props.bribesList[bribeId].cost)) {\r\n      console.log(\"pay bribe\")\r\n      newHero.gold -= props.bribesList[bribeId].cost\r\n      newHero.prison.chance -= props.bribesList[bribeId].chanceReduction\r\n      newHero.bribe.isPayed = true\r\n      newHero.bribe.chanceReduction = props.bribesList[bribeId].chanceReduction\r\n      newHero.bribe.id = bribeId\r\n      const date = new Date();\r\n      newHero.bribe.endTime = new Date(date.getTime() + props.bribesList[bribeId].duration*1000).getTime()\r\n      console.log(newHero)\r\n      props.updateHero(newHero)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className = \"row\">\r\n      {[0, 1, 2].map(id =>\r\n        <BribeCard  imgUrl = {props.bribesList[id].imgUrl}\r\n                    name = {props.bribesList[id].name}\r\n                    description = {props.bribesList[id].description}\r\n                    bribeCost = {props.bribesList[id].cost}\r\n                    chanceReduction = {props.bribesList[id].chanceReduction}\r\n                    bribeDuration = {props.bribesList[id].duration}\r\n                    isEnoughGoldToPayBribe = {isEnoughGoldToPayBribe(props.bribesList[id].cost)}\r\n                    payBribe = {(id) => payBribe(id)}\r\n                    id = {id}\r\n                    heroBribe = {props.hero.bribe}\r\n                    remainingBribeDuration = {props.remainingBribeDuration}\r\n                    key = {id}/>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bribes;\r\n","import React from 'react';\r\n\r\nconst Map = () => {\r\n\r\n  return (\r\n    <div>\r\n      Map\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\nconst Socios = () => {\r\n\r\n  return (\r\n    <div>\r\n      Socios\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Socios;\r\n","import React from 'react';\r\n\r\nconst Cartel = () => {\r\n\r\n  return (\r\n    <div>\r\n      Cartel\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cartel;\r\n","import React from 'react';\r\n\r\nconst MailBox = () => {\r\n\r\n  return (\r\n    <div>\r\n      MailBox\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MailBox;\r\n","import React from 'react';\r\n\r\nconst Shop = () => {\r\n\r\n  return (\r\n    <div>\r\n      Shop\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shop;\r\n","import React from 'react';\r\nimport './Prison.css';\r\nimport displayTime from './../../utils/displayTime';\r\nimport ProgressBar from './../../utils/ProgressBar';\r\n\r\nconst Prison = (props) => {\r\n  const url = 'https://rololand.github.io/cartelgame/db/others/prison.jpg';\r\n  let remainingPrisonDuration = props.remainingPrisonDuration\r\n  remainingPrisonDuration = Number.isInteger(remainingPrisonDuration) ?\r\n                                  remainingPrisonDuration :\r\n                                  props.prisonDuration\r\n  const prisonElapsedTime = props.prisonDuration - remainingPrisonDuration\r\n  return (\r\n    <div>\r\n      <h1>Zostałeś złapany!</h1>\r\n      <img className=\"PrisonImg\" src={url} alt={''}/><br />\r\n      {displayTime(remainingPrisonDuration)} <br />\r\n      <ProgressBar  value={prisonElapsedTime}\r\n                    max={props.prisonDuration} />\r\n      <h2>Przeczekaj odsiadkę lub opłać kaucję</h2>\r\n      <button disabled={props.isEnoughGoldToLeftPrison ? false : true}\r\n              onClick={() => props.payAndGetOutPrison()}>\r\n        Wyjdź z więzienia za {props.costOfGettingOutOfPrison} złota\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Prison;\r\n","const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport default getRandomInt\r\n","const getRandomFloat = (min, max, decimalPlaces) => {\r\n    var rand = Math.random()*(max-min) + min;\r\n    var power = Math.pow(10, decimalPlaces);\r\n    return Math.floor(rand*power) / power;\r\n}\r\n\r\nexport default getRandomFloat\r\n","import statsNamesEN from './statsNamesEN.js';\r\n\r\nconst getEquipmentPrice = (equipment) => {\r\n  let sum = 0;\r\n  for(var statName of statsNamesEN) {\r\n    sum += equipment.stats[statName];\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport default getEquipmentPrice\r\n","import getRandomInt from './getRandomInt.js'\r\nimport getRandomFloat from './getRandomFloat.js'\r\nimport statsNamesEN from './statsNamesEN.js'\r\nimport getEquipmentPrice from './getEquipmentPrice.js';\r\n\r\nconst getNewItem = (itemsList, heroLvl) => {\r\n  const id = getRandomInt(0, itemsList.length);\r\n  let newItem = itemsList[id];\r\n  for(let name of statsNamesEN) {\r\n    newItem.stats[name] = Math.ceil(\r\n      newItem.stats[name] *\r\n      (heroLvl + 1) *\r\n      getRandomFloat(0.5, 3, 1)\r\n    );\r\n  }\r\n  newItem.price = getEquipmentPrice(newItem);\r\n\r\n  return newItem;\r\n}\r\n\r\nexport default getNewItem\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Game.css';\r\n\r\nimport GameMenu from './GameMenu.js';\r\nimport GameHeader from './GameHeader.js';\r\n\r\nimport Hero from './Hero/Hero.js';\r\nimport City from './City/City.js';\r\nimport Residence from './Residence/Residence.js';\r\nimport Warehouse from './Warehouse/Warehouse.js';\r\nimport Lab from './Lab/Lab.js';\r\nimport Bribes from './Bribes/Bribes.js';\r\nimport Map from './Map/Map.js';\r\nimport Socios from './Socios/Socios.js';\r\nimport Cartel from './Cartel/Cartel.js';\r\nimport MailBox from './MailBox/MailBox.js';\r\nimport Shop from './Shop/Shop.js';\r\nimport Prison from './Prison/Prison.js';\r\n\r\nimport getNewItem from './../utils/getNewItem.js';\r\nimport getRandomInt from './../utils/getRandomInt.js'\r\n\r\nconst Game = (props) => {\r\n\r\n  const [actualGamePageName, setActualGamePageName] = useState(\"Hero\");\r\n  const [hero, setHero] = useState({});\r\n  const [tasksList, setTasksList] = useState([]);\r\n  const [bribesList, setBribesList] = useState([]);\r\n  const [itemsList, setItemsList] = useState([]);\r\n  const [lvlsList, setLvlsList] = useState([]);\r\n  const [isHeroDataLoaded, setHeroDataLoaded] = useState(false);\r\n  const [isNextLvlPopUp, setNextLvlPopUp] = useState(false);\r\n  const awsUrl = 'https://5cohdjbvl4.execute-api.us-east-1.amazonaws.com/dev/'\r\n\r\n  useEffect(() => {\r\n    const getHero = () => {\r\n      const url  = awsUrl + 'heros/' + props.heroId;\r\n      axios.get(url)\r\n        .then(hero => {\r\n          setHero(hero.data)\r\n          setHeroDataLoaded(true)\r\n          console.log(\"Hero data is loaded from db\")\r\n        })\r\n        .catch(err => {\r\n          console.log('Error: ' + err);\r\n        });\r\n    }\r\n    const getTasksList = () => {\r\n      const url  = awsUrl + 'tasks/';\r\n      axios.get(url)\r\n        .then(tasks => {\r\n          setTasksList(tasks.data.tasksList)\r\n          console.log(\"Tasks list is loaded from db\")\r\n        })\r\n        .catch(err => {\r\n          console.log('Error: ' + err);\r\n        });\r\n    }\r\n    const getBribesList = () => {\r\n      const url  = awsUrl + 'bribes/';\r\n      axios.get(url)\r\n        .then(bribes => {\r\n          setBribesList(bribes.data.bribesList)\r\n          console.log(\"Bribes list is loaded from db\")\r\n        })\r\n        .catch(err => {\r\n          console.log('Error: ' + err);\r\n        });\r\n    }\r\n    const getItemsList = () => {\r\n      const url  = awsUrl + 'items/';\r\n      axios.get(url)\r\n        .then(items => {\r\n          setItemsList(items.data.itemsList)\r\n          console.log(\"Items list is loaded from db\")\r\n        })\r\n        .catch(err => {\r\n          console.log('Error: ' + err);\r\n        });\r\n    }\r\n    const getLvlsList = () => {\r\n      const url  = awsUrl + 'lvls/';\r\n      axios.get(url)\r\n        .then(lvls => {\r\n          setLvlsList(lvls.data.lvlsList)\r\n          console.log(\"Lvls list is loaded from db\")\r\n        })\r\n        .catch(err => {\r\n          console.log('Error: ' + err);\r\n        });\r\n    }\r\n\r\n    getHero();\r\n    getTasksList();\r\n    getBribesList();\r\n    getItemsList();\r\n    getLvlsList();\r\n  }, [props.heroId]);\r\n\r\n  const updateHero = React.useCallback((hero) => {\r\n    let isLvlUp = false;\r\n    while(hero.exp > hero.expNextLvl) {\r\n      isLvlUp = true;\r\n      hero.lvl += 1;\r\n      hero.exp -= hero.expNextLvl;\r\n      hero.expNextLvl = lvlsList[hero.lvl];\r\n      hero.prison.chance = hero.lvl * 5;\r\n    }\r\n\r\n    const url  = 'https://5cohdjbvl4.execute-api.us-east-1.amazonaws.com/dev/heros/' + props.heroId;\r\n    axios.put(url, hero)\r\n      .then((hero) => {\r\n        setHero(hero.data)\r\n        isLvlUp && setNextLvlPopUp(true);\r\n        console.log(\"Hero data is uploaded to db\")\r\n      })\r\n      .catch(err => {\r\n        console.log('Error: ' + err);\r\n      });\r\n\r\n  }, [lvlsList])\r\n\r\n  const selectGamePage = () => {\r\n    if (actualGamePageName===\"Hero\") {\r\n      return <Hero  hero = {hero}\r\n                    updateHero = {(hero) => updateHero(hero)}/>\r\n    } else if (actualGamePageName===\"City\" && !hero.prison.isPrisoned) {\r\n      return <City  task={hero.task}\r\n                    prisonChance = {hero.prison.chance}\r\n                    calculateTask = {() => calculateTask()}\r\n                    remainingTaskDuration = {remainingTaskDuration}\r\n                    startTask = {(task, id) => startTask(task, id)}/>\r\n    } else if (actualGamePageName===\"Residence\" && !hero.prison.isPrisoned) {\r\n      return <Residence />\r\n    } else if (actualGamePageName===\"Bribes\" && !hero.prison.isPrisoned) {\r\n      return <Bribes  hero = {hero}\r\n                      bribesList = {bribesList}\r\n                      updateHero = {(hero) => updateHero(hero)}\r\n                      remainingBribeDuration = {remainingBribeDuration}/>\r\n    } else if (actualGamePageName===\"Lab\" && !hero.prison.isPrisoned) {\r\n      return <Lab />\r\n    } else if (actualGamePageName===\"Warehouse\" && !hero.prison.isPrisoned) {\r\n      return <Warehouse />\r\n    } else if (actualGamePageName===\"Map\" && !hero.prison.isPrisoned) {\r\n      return <Map />\r\n    } else if (actualGamePageName===\"Socios\") {\r\n      return <Socios />\r\n    } else if (actualGamePageName===\"Cartel\") {\r\n      return <Cartel />\r\n    } else if (actualGamePageName===\"MailBox\") {\r\n      return <MailBox />\r\n    } else if (actualGamePageName===\"Shop\" && !hero.prison.isPrisoned) {\r\n      return <Shop />\r\n    } else {\r\n      return <Prison  payAndGetOutPrison = {() => payAndGetOutPrison()}\r\n                      isEnoughGoldToLeftPrison = {isEnoughGoldToLeftPrison()}\r\n                      remainingPrisonDuration = {remainingPrisonDuration}\r\n                      prisonDuration = {hero.prison.duration}\r\n                      costOfGettingOutOfPrison = {calculateCostOfGettingOutOfPrison()}/>\r\n    }\r\n  }\r\n\r\n  //City start\r\n  const [remainingTaskDuration, setRemainingTaskDuration] = useState(\"undefined\");\r\n  const [CityAlert, setCityAlert] = useState('');\r\n\r\n  const isTaskTimeElapsed = React.useCallback(() => {\r\n    if (isHeroDataLoaded && hero.task.isStarted) {\r\n      const endTime = hero.task.endTime;\r\n      const currentTime = new Date().getTime();\r\n      const secondsToEnd = Math.round((endTime - currentTime)/1000);\r\n      setRemainingTaskDuration(secondsToEnd);\r\n      return endTime < currentTime\r\n    }\r\n    return false\r\n  }, [hero])\r\n\r\n  const finishTask = React.useCallback(() => {\r\n    if(hero.task.isStarted && !hero.task.isFinished) {\r\n      console.log(\"Function finishTask\")\r\n      let newHero = hero;\r\n      newHero.task.isFinished = true;\r\n      setCityAlert('!!');\r\n      updateHero(newHero)\r\n    }\r\n  }, [hero, updateHero])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if(isHeroDataLoaded && isTaskTimeElapsed())\r\n        finishTask();\r\n      if(isHeroDataLoaded && isPrisonTimeElapsed())\r\n        terminationOfPrisonSentence();\r\n      if(isHeroDataLoaded && isBribeTimeElapsed())\r\n        finishBribe();\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [hero, finishTask, isTaskTimeElapsed, isHeroDataLoaded]);\r\n\r\n  const startTask = (task, id) => {\r\n    console.log(\"Function startTask\");\r\n    let date = new Date();\r\n    let taskEndTime = new Date(date.getTime() + task.taskDuration[id]*1000).getTime();\r\n    let newHero = hero;\r\n\r\n    newHero.task.isStarted = true;\r\n    newHero.task.isFinished = false;\r\n    newHero.task.isCalculated = false;\r\n    newHero.task.endTime = taskEndTime;\r\n    newHero.task.taskDuration = task.taskDuration[id];\r\n    newHero.task.name = task.name[id];\r\n    newHero.task.description = task.description[id];\r\n    newHero.task.imgUrl = task.imgUrl[id];\r\n    newHero.task.gold = task.gold[id];\r\n    newHero.task.exp = task.exp[id];\r\n    updateHero(newHero);\r\n  }\r\n\r\n  const calculateTask = () => {\r\n    if(isTaskTimeElapsed()) {\r\n      console.log(\"Function calculateTask\")\r\n      setCityAlert('');\r\n      let newHero = hero;\r\n\r\n      if (getRandomInt(1, 100) < hero.prison.chance) {\r\n        let date = new Date();\r\n        newHero.prison.isPrisoned = true\r\n        newHero.prison.exitPrisonTime = new Date(date.getTime() + hero.prison.duration*1000).getTime()\r\n      }\r\n\r\n      newHero.task.isStarted = false;\r\n      newHero.task.isFinished = false;\r\n      newHero.task.isCalculated = true;\r\n\r\n      if(!newHero.prison.isPrisoned) {\r\n        Number.isInteger(newHero.task.gold) ?\r\n          newHero.gold = newHero.gold + newHero.task.gold :\r\n          newHero.gold = newHero.gold + 1;\r\n        Number.isInteger(newHero.task.exp) ?\r\n          newHero.exp = newHero.exp + newHero.task.exp :\r\n          newHero.exp = newHero.exp + 1;\r\n        if(newHero.task.item) {\r\n          addEquipmentToBackpack(newHero.task.item);\r\n        }\r\n      }\r\n\r\n      //draw new tasks\r\n      const drawedTaskIds = drawOfThreeTaskIds()\r\n      let newGold = []\r\n      let newExp = []\r\n      let newName = []\r\n      let newDescription = []\r\n      let newImgUrl = []\r\n      let newTaskDuration = []\r\n      let random = 0;\r\n      let lvl = newHero.lvl + 1;\r\n      let idList = [0, 1, 2];\r\n      for(var i of idList) {\r\n        newName[i] = tasksList[drawedTaskIds[i]].name\r\n        newDescription[i] = tasksList[drawedTaskIds[i]].description\r\n        newImgUrl[i] = tasksList[drawedTaskIds[i]].imgUrl\r\n        newTaskDuration[i] = tasksList[drawedTaskIds[i]].time\r\n        random = getRandomInt(1, newTaskDuration[i]/2);\r\n        newGold[i] = Math.floor(tasksList[drawedTaskIds[i]].gold * lvl * random / 30)\r\n        newExp[i] = Math.floor(tasksList[drawedTaskIds[i]].exp * lvl * (newTaskDuration[i] - random) / 30)\r\n      }\r\n      if(getRandomInt(1, 100) < 90) {\r\n        newHero.task.item = getNewItem(itemsList, lvl);\r\n      } else {\r\n        newHero.task.item = {};\r\n      }\r\n      newHero.task.gold = newGold;\r\n      newHero.task.exp = newExp;\r\n      newHero.task.name = newName;\r\n      newHero.task.description = newDescription;\r\n      newHero.task.taskDuration = newTaskDuration;\r\n      newHero.task.imgUrl = newImgUrl;\r\n      setRemainingTaskDuration(\"undefined\")\r\n      updateHero(newHero);\r\n    }\r\n  }\r\n\r\n  const drawOfThreeTaskIds = () => {\r\n    let id1 = getRandomInt(0, tasksList.length);\r\n    let id2 = getRandomInt(0, tasksList.length);\r\n    let id3 = getRandomInt(0, tasksList.length);\r\n    while(id2 === id1) {\r\n      id2 = getRandomInt(0, tasksList.length);\r\n    }\r\n    while(id3 === id1 || id3 === id2) {\r\n      id3 = getRandomInt(0, tasksList.length);\r\n    }\r\n    return [id1, id2, id3]\r\n  }\r\n\r\n  const addEquipmentToBackpack = (equipment) => {\r\n    if(hero.backpack.length < 10) {\r\n      hero.backpack.push(equipment);\r\n    }\r\n  }\r\n  //City end\r\n\r\n  //Prison start\r\n  const [remainingPrisonDuration, setRemainingPrisonDuration] = useState(\"undefined\");\r\n\r\n  const calculateCostOfGettingOutOfPrison = () => {\r\n    return hero.lvl * 1\r\n  }\r\n\r\n  const isEnoughGoldToLeftPrison = () => {\r\n    return hero.gold >= calculateCostOfGettingOutOfPrison()\r\n  }\r\n\r\n  const isPrisonTimeElapsed = React.useCallback(() => {\r\n    if (hero.prison.isPrisoned) {\r\n      const endTime = hero.prison.exitPrisonTime;\r\n      const currentTime = new Date().getTime();\r\n      const secondsToEnd = Math.round((endTime - currentTime)/1000);\r\n      setRemainingPrisonDuration(secondsToEnd);\r\n      return endTime < currentTime\r\n    }\r\n    return false\r\n  }, [hero])\r\n\r\n  const terminationOfPrisonSentence = React.useCallback(() => {\r\n    if(hero.prison.isPrisoned) {\r\n      console.log(\"Function terminationOfPrisonSentence\")\r\n      let newHero = hero\r\n      newHero.prison.isPrisoned = false\r\n      setRemainingPrisonDuration(\"undefined\")\r\n      updateHero(newHero)\r\n    }\r\n  }, [hero, updateHero])\r\n\r\n  const payAndGetOutPrison = () => {\r\n    const newHero = hero\r\n    const costOfGettingOutOfPrison = calculateCostOfGettingOutOfPrison()\r\n    newHero.gold = newHero.gold - costOfGettingOutOfPrison\r\n    newHero.prison.isPrisoned = false\r\n    newHero.prison.exitPrisonTime = 1596743927075\r\n    setRemainingPrisonDuration(\"undefined\")\r\n    updateHero(newHero)\r\n  }\r\n  //Prison end\r\n\r\n  //Birbe start\r\n  const [remainingBribeDuration, setRemainingBribeDuration] = useState(\"undefined\");\r\n\r\n  const isBribeTimeElapsed = React.useCallback(() => {\r\n    if (hero.bribe.isPayed) {\r\n      const endTime = hero.bribe.endTime;\r\n      const currentTime = new Date().getTime();\r\n      const secondsToEnd = Math.round((endTime - currentTime)/1000);\r\n      setRemainingBribeDuration(secondsToEnd);\r\n      return endTime < currentTime\r\n    }\r\n    return false\r\n  }, [hero])\r\n\r\n  const finishBribe = React.useCallback(() => {\r\n    if(hero.bribe.isPayed) {\r\n      console.log(\"Function finishBribe\")\r\n      let newHero = hero\r\n      newHero.bribe.isPayed = false\r\n      newHero.prison.chance += newHero.bribe.chanceReduction\r\n      setRemainingBribeDuration(\"undefined\")\r\n      updateHero(newHero)\r\n    }\r\n  }, [hero, updateHero])\r\n  //Bribe end\r\n\r\n  return (\r\n    isHeroDataLoaded ?\r\n      <div  className=\"popupContainer\"\r\n            onClick={() => setNextLvlPopUp(false)}>\r\n        <div className=\"gameContainer\">\r\n          <div className=\"GameMenu\">\r\n            <GameMenu onClick={name => setActualGamePageName(name)}\r\n                      onClickLogout={() => props.onClickLogout()}\r\n                      CityAlert={CityAlert}/>\r\n          </div>\r\n          <div className=\"GamePage\">\r\n            <GameHeader hero={hero}/>\r\n            {selectGamePage()}\r\n          </div>\r\n        </div>\r\n        {isNextLvlPopUp && (\r\n          <div className=\"popup\">\r\n            Gratulacje <br />\r\n            Osiągnięto następny poziom! <br />\r\n            Aktualny poziom: {hero.lvl}\r\n          </div>\r\n        )}\r\n      </div> :\r\n      <div>\r\n        loading page\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Game;\r\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Logging from './logging/Logging.js'\nimport LogErrMsg from './logging/LogErrMsg.js'\nimport Game from './game/Game.js'\n\nconst App = (props) => {\n  const [isUserLogged, setUserLogged] = useState(false);\n  const [login, setLogin] = useState(\"admin\");\n  const [password, setPassword] = useState(\"admin\");\n  const [logErrMsg, setLogErrMsg] = useState(\"\");\n  const [heroId, setHeroId] = useState(\"\");\n\n  const handleLoggingOnClickButton = () => {\n    const url  = 'https://5cohdjbvl4.execute-api.us-east-1.amazonaws.com/dev/users/' + login;\n    axios.get(url)\n      .then(user => {\n        if(user.data.password === password) {\n          setHeroId(user.data._id);\n          setUserLogged(true);\n          setLogErrMsg(\"\");\n        } else {\n          setLogErrMsg(\"Nieprawidłowe hasło.\");\n        }\n      })\n      .catch(err => {\n        console.log('Error: ' + err);\n        setLogErrMsg(\"Podany login nie istnieje.\");\n      });\n  }\n\n\n  return (\n    <div className=\"App\">\n      {isUserLogged ?\n        <Game onClickLogout={() => setUserLogged(false)}\n              heroId={heroId}/> :\n        <div>\n          <Logging  handleLoggingOnClickButton={() => handleLoggingOnClickButton()}\n                    handleChangeLogin={value => setLogin(value)}\n                    handleChangePassword={value => setPassword(value)}\n                    login={login}\n                    password={password}\n          />\n          <LogErrMsg logErrMsg={logErrMsg} />\n        </div>\n      }\n    </div>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve Warehouse; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; //tutorial mern usuwa to\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister(); //tutorial mern usuwa to\n"],"sourceRoot":""}